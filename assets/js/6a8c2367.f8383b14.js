(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[739],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return m},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=s(n),f=r,d=u["".concat(c,".").concat(f)]||u[f]||p[f]||o;return n?a.createElement(d,l(l({ref:t},m),{},{components:n})):a.createElement(d,l({ref:t},m))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<o;s++)l[s]=n[s];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7031:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return m},default:function(){return u}});var a=n(2122),r=n(9756),o=(n(7294),n(3905)),l=["components"],i={title:"Charmil Localization",slug:"/charmil_localization"},c=void 0,s={unversionedId:"charmil_i18n",id:"charmil_i18n",isDocsHomePage:!1,title:"Charmil Localization",description:"Localization has never been easier. Charmil provides out of the box support for the localization of your CLI.",source:"@site/docs/charmil_i18n.md",sourceDirName:".",slug:"/charmil_localization",permalink:"/charmil/docs/charmil_localization",editUrl:"https://github.com/aerogear/charmil/docs/charmil_i18n.md",version:"current",frontMatter:{title:"Charmil Localization",slug:"/charmil_localization"},sidebar:"main",previous:{title:"Charmil Factory",permalink:"/charmil/docs/charmil_factory"},next:{title:"Charmil Logger",permalink:"/charmil/docs/charmil_logger"}},m=[{value:"How to use",id:"how-to-use",children:[]},{value:"Sample Locales file",id:"sample-locales-file",children:[]}],p={toc:m};function u(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Localization has never been easier. Charmil provides out of the box support for the localization of your CLI."),(0,o.kt)("h2",{id:"how-to-use"},"How to use"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Provide the default language, the path to your locales, and the file format of your locales to initialize the localizer. Charmil accepts locales in the yaml, toml, and json formats.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// Initialize localizer providing the language, locales and format of locales file\nloc, err := localize.InitLocalizer(localize.Config{Language: language.English, Path: "examples/plugins/date/locales/en/en.yaml", Format: "yaml"})\nif err != nil {\n    return nil, err\n}\n\n// Create new/default instance of factory\nnewFactory := factory.Default(loc)\n')),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"LocalizeByID is a Factory function that takes a message Id stored in locales and also allows you to give templateEntries for your locales.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// using Localizer for localization of cobra command\ncmd := &cobra.Command{\n    Use:          newFactory.Localize.LocalizeByID("sample.cmd.use"),\n    Short:        newFactory.Localize.LocalizeByID("sample.cmd.short"),\n    Example:      newFactory.Localize.LocalizeByID("sample.cmd.example"),\n}\n')),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-go"},'// providing template entries\nnewFactory.Localize.LocalizeByID("sample.hi", {"Name": "John"})\n')),(0,o.kt)("h2",{id:"sample-locales-file"},"Sample Locales file"),(0,o.kt)("p",null,"You must provide locales for the CLI to work. Here's a yaml-formatted sample."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},'# localization by id\nsample.cmd.use:\n  description: "Use of sample"\n  one: "sample"\nsample.cmd.short:\n  description: "short description of sample command"\n  one: "tell sample"\nsample.cmd.example:\n  description: "Examples of sample command"\n  one: "$ host sample"\n\n# using templates\nsample.hi:\n  description: "Say hi"\n  one: "Hi {{.Name}}"\n')))}u.isMDXComponent=!0}}]);