(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return d},kt:function(){return s}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),m=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),p=m(n),s=a,h=p["".concat(l,".").concat(s)]||p[s]||u[s]||o;return n?r.createElement(h,i(i({ref:t},d),{},{components:n})):r.createElement(h,i({ref:t},d))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=p;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,i[1]=c;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},687:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return d},default:function(){return p}});var r=n(2122),a=n(9756),o=(n(7294),n(3905)),i=["components"],c={title:"Charmil CLI",slug:"/charmil_cli"},l=void 0,m={unversionedId:"charmil_cli",id:"charmil_cli",isDocsHomePage:!1,title:"Charmil CLI",description:"Note: Charmil CLI is under development",source:"@site/../docs/src/charmil_cli.md",sourceDirName:".",slug:"/charmil_cli",permalink:"/charmil/docs/charmil_cli",version:"current",frontMatter:{title:"Charmil CLI",slug:"/charmil_cli"}},d=[{value:"Init Command",id:"init-command",children:[]},{value:"Add Command",id:"add-command",children:[]},{value:"Crud Command",id:"crud-command",children:[]}],u={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Note: Charmil CLI is under development")),(0,o.kt)("p",null,"Charmil CLI provides a way to create and manage the Charmil project. CLI gives you preconfigured shell commands as recommended by Charmil, so you don't have to integrate charmil core yourself. Available commands are:"),(0,o.kt)("h2",{id:"init-command"},"Init Command"),(0,o.kt)("p",null,"Init command initializes a Charmil project boilerplate(starter). This will generate shell commands, readme, licence, etc to get you started easily."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ charmil init\n")),(0,o.kt)("p",null,"Fill in the prompted info(github owner, repository and cli name) to get started!"),(0,o.kt)("h2",{id:"add-command"},"Add Command"),(0,o.kt)("p",null,"Add command adds a new command into the CLI, along with english locales for the command."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ charmil add --cmdName="mycmd"\n')),(0,o.kt)("p",null,"if you want to specify the path for command to be created, use ",(0,o.kt)("inlineCode",{parentName:"p"},"--cmdPath")," flag. By default ",(0,o.kt)("inlineCode",{parentName:"p"},"--cmdPath")," is set to current directory."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ charmil add --cmdName="mycmd" --cmdPath="./cmd"\n')),(0,o.kt)("h2",{id:"crud-command"},"Crud Command"),(0,o.kt)("p",null,"Helps developers generate CRUD commands for their CLI."),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("h4",{parentName:"li",id:"link-to-detailed-documentation-on-the-charmil-crud-command"},(0,o.kt)("a",{parentName:"h4",href:"/charmil/docs/charmil_cli_crud"},"Link to detailed documentation on the Charmil CRUD Command")))))}p.isMDXComponent=!0}}]);